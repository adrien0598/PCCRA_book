[["TEG.html", "Chapter 8 TEG virtuel 8.1 Basique 8.2 Comparaison vrais teg", " Chapter 8 TEG virtuel library(tidyr) library(stringr) library(FactoMineR) library(ggplot2) library(ggrepel) library(hrbrthemes) library(ggsci) 8.1 Basique selection des genes gene = d_merge$Gene cible = c(&quot;RFA1&quot;, &quot;RFA2&quot;, &quot;RFA3&quot;, &quot;MEC1&quot;, &quot;RAD9&quot;, &quot;RAD53&quot;, &quot;RAD1&quot;, &quot;APN2&quot;, &quot;LIF1&quot;, &quot;MSH2&quot;, &quot;TOP1&quot;, &quot;TEL1&quot;, &quot;SLM1&quot;, &quot;MEC1&quot;, &quot;MSH2&quot;, &quot;MSH3&quot;, &quot;MSH4&quot;, &quot;MSH5&quot;) extra groupe v = d_merge[,-c(1,2)] %&gt;% apply(1, function(x){var(x)}) m = d_merge[,-c(1,2)] %&gt;% apply(1, function(x){mean(x)}) gene_v = data.frame(gene = d_merge$Gene, v = v, m = m) gene_v = gene_v[order(gene_v$v),] extra_g = gene_v[c(1,2),]$gene restriction de la table cible_ok = c(cible, extra_g) d_merge_sub = d_merge[,stress_campto] %&gt;% cbind(data.frame(Gene = d_merge$Gene)) d_merge_sub = d_merge_sub[d_merge_sub$Gene %&gt;% sapply(function(x){ if(x %in% cible_ok){ TRUE } else{FALSE} }),] row.names(d_merge_sub) = d_merge_sub$Gene d_merge_sub = d_merge_sub[,-dim(d_merge_sub)[2]] plots d_merge_sub %&gt;% dist() %&gt;% hclust() %&gt;% plot() gg = NULL for(i in stress_campto){ if(gg %&gt;% is.null()){ gg = data.frame(gene = row.names(d_merge_sub), stress = rep(i, (row.names(d_merge_sub) %&gt;% length())), fitness = d_merge_sub[[i]]) } else { gg = gg %&gt;% rbind(data.frame(gene = row.names(d_merge_sub), stress = rep(i, (row.names(d_merge_sub) %&gt;% length())), fitness = d_merge_sub[[i]])) } } ggplot(gg) + aes(y = fitness, x = gene)+ geom_boxplot()+ geom_point(data = subset(gg, stress == &quot;camptothecin_500um&quot;), aes(y = fitness, x = gene), color = &quot;red&quot;) cible = c(&quot;RAD1&quot;, &quot;APN2&quot;, &quot;LIF1&quot;, &quot;MSH2&quot;, &quot;TOP1&quot;, &quot;TEL1&quot;, &quot;SLM1&quot;, &quot;MEC1&quot;) d_merge_sub = d_merge$camptothecin_500um %&gt;% cbind(data.frame(Gene = d_merge$Gene)) d_merge_sub = d_merge_sub[d_merge_sub$Gene %&gt;% sapply(function(x){ if(x %in% cible){ TRUE } else{FALSE} }),] row.names(d_merge_sub) = d_merge_sub$Gene colnames(d_merge_sub) = c(&quot;fitness&quot;, &quot;gene&quot;) ggplot(d_merge_sub)+ aes(x = gene, y = fitness)+ geom_col()+ scale_fill_npg()+ labs(title = &quot;Réponse à la campthotecine des souches des TEG&quot;, x = &quot;Mutant&quot;, y = &quot;Fitness defect&quot;, subtitle = &quot;Selon les données du crible chimiogénétique&quot;)+ theme_ipsum() cible = c(&quot;RFA1&quot;, &quot;RFA2&quot;, &quot;RFA3&quot;, &quot;MEC1&quot;, &quot;RAD9&quot;, &quot;RAD53&quot;, &quot;MSH2&quot;, &quot;MSH3&quot;, &quot;MSH4&quot;, &quot;MSH5&quot;) d_merge_sub = d_merge$camptothecin_500um %&gt;% cbind(data.frame(Gene = d_merge$Gene)) d_merge_sub = d_merge_sub[d_merge_sub$Gene %&gt;% sapply(function(x){ if(x %in% cible){ TRUE } else{FALSE} }),] row.names(d_merge_sub) = d_merge_sub$Gene colnames(d_merge_sub) = c(&quot;fitness&quot;, &quot;gene&quot;) ggplot(d_merge_sub)+ aes(x = gene, y = fitness)+ geom_col()+ scale_fill_npg()+ labs(title = &quot;Réponse à la campthotecine de mutants de la réparation&quot;, x = &quot;Mutant&quot;, y = &quot;Fitness defect&quot;, subtitle = &quot;Selon les données du crible chimiogénétique&quot;)+ theme_ipsum() 8.2 Comparaison vrais teg teg = read.csv(&quot;data/tableau teg.csv&quot;) %&gt;% na.omit() teg_s = teg[teg$souche %in% c(&quot;12&quot;, &quot;13&quot;, &quot;14&quot;, &quot;15&quot;, &quot;19&quot;, &quot;22&quot;, &quot;24&quot;, &quot;25&quot;),] ggplot(teg)+ aes(x = souche, y = norm_nb_colonies)+ geom_col()+ scale_fill_npg()+ labs(title = &quot;Réponse à la campthotecine des mutants des TEG&quot;, x = &quot;Mutant&quot;, y = &quot;Rapport (nombre de colonie DMSO / nombre de colonies CPT)&quot;, subtitle = &quot;Selon les données du TEG&quot;)+ theme_ipsum() ggplot(teg_s)+ aes(x = souche, y = norm_nb_colonies)+ geom_col()+ scale_fill_npg()+ labs(title = &quot;Réponse à la campthotecine des mutants des TEG&quot;, x = &quot;Mutant&quot;, y = &quot;Rapport (nombre de colonie DMSO / nombre de colonies CPT)&quot;, subtitle = &quot;Selon les données du TEG&quot;)+ theme_ipsum() g = c(&quot;RAD1&quot;, &quot;APN2&quot;, &quot;LIF1&quot;, &quot;MSH2&quot;, &quot;TOP1&quot;, &quot;TEL1&quot;, &quot;SLM1&quot;, &quot;MEC1&quot;) tmp = d_merge$camptothecin_500um %&gt;% cbind(data.frame(Gene = d_merge$Gene)) tmp = tmp[tmp$Gene %&gt;% sapply(function(x){ if(x %in% g){ TRUE } else{FALSE} }),] row.names(tmp) = tmp$Gene tmp = tmp[c(&quot;RAD1&quot;, &quot;APN2&quot;, &quot;LIF1&quot;, &quot;MSH2&quot;, &quot;TOP1&quot;, &quot;TEL1&quot;, &quot;SLM1&quot;, &quot;MEC1&quot;),] comparaison = data.frame(gene = tmp$Gene, fd.crible = tmp$., mutant = c(&quot;12&quot;, &quot;13&quot;, &quot;14&quot;, &quot;15&quot;, &quot;19&quot;, &quot;22&quot;, &quot;24&quot;, &quot;25&quot;), viabi = teg_s$mean_area, nb = teg_s$nb_colonies, n_viabi = teg_s$norm_mean_area, n_nb = teg_s$norm_nb_colonies) l1 = lm(fd.crible ~ viabi + nb, data = comparaison) l11 = lm(fd.crible ~ viabi, data = comparaison) # fonctionne l12 = lm(fd.crible ~ viabi, data = comparaison[-8,]) l2 = lm(fd.crible ~ log(viabi) + log(nb), data = comparaison[-8,]) l3 = lm(fd.crible ~ n_viabi + n_nb, data = comparaison) l3 = lm(fd.crible ~ n_viabi, data = comparaison[-8,]) l4 = lm(fd.crible ~ log(n_viabi) + log(n_nb), data = comparaison[-8,]) l12 %&gt;% summary() ## ## Call: ## lm(formula = fd.crible ~ viabi, data = comparaison[-8, ]) ## ## Residuals: ## 1 2 3 4 5 6 7 ## -0.10280 -0.12830 0.23393 -0.06947 0.04705 0.05687 -0.03727 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -0.13782 0.09654 -1.428 0.21277 ## viabi 0.18026 0.04209 4.283 0.00784 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.1367 on 5 degrees of freedom ## Multiple R-squared: 0.7858, Adjusted R-squared: 0.743 ## F-statistic: 18.34 on 1 and 5 DF, p-value: 0.007842 ggplot(comparaison[-8,])+ aes(x = fd.crible, y = viabi)+ geom_point()+ scale_color_npg()+ labs(title = &quot;Prediction&quot;, x = &quot;Viabilité selon le crible (fitness defect)&quot;, y = &quot;Viabilité TEG&quot;, subtitle = &quot;trop bien&quot;)+ geom_smooth(method=lm, se=FALSE)+ theme_ipsum() ## `geom_smooth()` using formula = &#39;y ~ x&#39; mod &lt;- lm(viabi ~ fd.crible, data = comparaison[-8,]) mod %&gt;% summary() ## ## Call: ## lm(formula = viabi ~ fd.crible, data = comparaison[-8, ]) ## ## Residuals: ## 1 2 3 4 5 6 7 ## 0.3904 0.3895 -1.1065 0.3403 0.3029 -0.6445 0.3280 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.016 0.333 3.051 0.02840 * ## fd.crible 4.359 1.018 4.283 0.00784 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.6722 on 5 degrees of freedom ## Multiple R-squared: 0.7858, Adjusted R-squared: 0.743 ## F-statistic: 18.34 on 1 and 5 DF, p-value: 0.007842 cible = c(&quot;RFA1&quot;, &quot;RFA2&quot;, &quot;RFA3&quot;, &quot;MEC1&quot;, &quot;RAD9&quot;, &quot;RAD53&quot;, &quot;SAE2&quot;, &quot;RAD51&quot;, &quot;MSH2&quot;, &quot;MSH3&quot;, &quot;MSH4&quot;, &quot;MSH5&quot;) d_merge_sub = d_merge$camptothecin_500um %&gt;% cbind(data.frame(Gene = d_merge$Gene)) d_merge_sub = d_merge_sub[d_merge_sub$Gene %&gt;% sapply(function(x){ if(x %in% cible){ TRUE } else{FALSE} }),] row.names(d_merge_sub) = d_merge_sub$Gene colnames(d_merge_sub) = c(&quot;fd.crible&quot;, &quot;gene&quot;) pred = predict(mod, d_merge_sub) gg = data.frame(viabilite = c(pred, comparaison$viabi), gene = c(d_merge_sub$gene, comparaison$gene)) gg[[&quot;m&quot;]] = ((gg$viabilite &gt;= 3)*3 + (gg$viabilite &lt; 1)*1 + (gg$viabilite &gt;= 1 &amp; gg$viabilite &lt; 3)*2) %&gt;% as.factor() gg = gg[-16,] # MSH2 de trop ggplot(gg)+ aes(x = gene, y = viabilite, fill = m)+ geom_col()+ scale_fill_npg()+ labs(title = &quot;Viabilité avec campthotecine de mutants des voies de réparation&quot;, x = &quot;Mutant&quot;, y = &quot;Viabilité&quot;, subtitle = &quot;Selon les données du TEG et le données predite via le crible&quot;)+ theme_ipsum() ################ row.names(d_merge_sub) = d_merge_sub$Gene colnames(d_merge_sub) = c(&quot;fd.crible&quot;, &quot;gene&quot;) l3 = lm(n_viabi ~ fd.crible, data = comparaison[-8,]) pred = predict(l3, d_merge_sub) gg = data.frame(viabilite = c(pred, comparaison$n_viabi), gene = c(d_merge_sub$gene, comparaison$gene)) gg[[&quot;m&quot;]] = ((gg$viabilite &gt;= 1)*3 + (gg$viabilite &lt; 0.24)*1 + (gg$viabilite &gt;= 0.24 &amp; gg$viabilite &lt; 1)*2) %&gt;% as.factor() gg = gg[-16,] # MSH2 de trop ggplot(gg)+ aes(x = gene, y = viabilite, fill = m)+ geom_col()+ scale_fill_npg()+ labs(title = &quot;Viabilité de différents mutants des voies de réparation en présence de campthotecine&quot;, x = &quot;Mutant&quot;, y = &quot;Viabilité (/viabilité en DMSO)&quot;, subtitle = &quot;Selon les données du TEG et le données predite via le crible&quot;)+ theme_ipsum() "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
